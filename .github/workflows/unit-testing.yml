# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: 
      - opened 
      - reopened
    branches: [ "main" ]
    paths:
      - '**.py'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.6"
    - name: Set up Poetry
      run: |
        pip install poetry==1.8.2
    - name: Ensure lock file consistency
      run: |
        poetry lock --no-update
    - name: Include antiword
      run: |
        sudo apt-get install antiword
    - name: Output some variables for clarity
      run: |
        docker --version
        pwd
        ls
        env
    - name: Install dependencies
      run: |
        poetry install
    - name: Login to docker
      run: |
        echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Include app credentials
      run: |
        echo ${{ secrets.GSUITE_APP_CREDS }} > resources/gsuite_creds.json
    - name: Create containers
      run: |
        make docker-processor
        make docker-api
    - name: Establish env file
      env:
        QA_ENV_FILE: ${{ secrets.QA_ENV_FILE }}
      run: |
        echo $QA_ENV_FILE > .env
    - name: Run containers
      run: |
        cd docker
        docker compose up -d
    - name: Show running containers
      run: |
        docker ps -a
    - name: Unit test
      run: |
        make test
#        make test-it
