FROM python:3.11-alpine as base

ARG DEV=false
ENV VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH"

RUN apk update && \
    apk add libpq


FROM base as builder

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

RUN apk update && \
    apk add linux-headers build-base python3-dev ethtool && \
    apk add musl-dev gcc gfortran openblas-dev

WORKDIR /app

# Install Poetry
RUN pip install poetry==1.8.0

# Install the app
COPY pyproject.toml ./
RUN poetry update
# RUN pip install gpt4all
RUN poetry install --no-root && rm -rf $POETRY_CACHE_DIR;


FROM base as runtime

WORKDIR /app

RUN apk update && \
    apk add gcc musl-dev gfortran openblas-dev antiword
RUN pip install poetry==1.8.0
RUN pip install --upgrade google-apps-meet google-auth-httplib2 google-auth-oauthlib

COPY --from=builder ${VIRTUAL_ENV} ${VIRTUAL_ENV}

RUN mkdir -p /app/api
RUN mkdir -p /app/library
RUN mkdir -p /app/library/data
RUN mkdir -p /app/library/data/local
RUN mkdir -p /app/library/data/external
RUN mkdir -p /app/library/models
RUN mkdir -p /app/library/llms
RUN mkdir -p /app/library/managers
RUN mkdir -p /app/library/enums
RUN mkdir -p /app/resources
COPY pyproject.toml ./
RUN poetry lock --no-update
RUN poetry install

COPY globals.py ./
COPY api/* ./api/
COPY library/* ./library/
COPY library/data/local/* ./library/data/local
COPY library/data/external/* ./library/data/external
COPY library/llms/* ./library/llms
COPY library/enums/* ./library/enums
COPY library/models/* ./library/models  
COPY library/managers/* ./library/managers
COPY resources/gsuite_creds.json /app/resources

CMD ["uvicorn", "api.main:app", "--port=5010", "--host=0.0.0.0"] 
EXPOSE 5010